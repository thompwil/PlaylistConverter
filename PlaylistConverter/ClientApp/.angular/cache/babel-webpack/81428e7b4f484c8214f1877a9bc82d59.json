{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\wiljt\\\\source\\\\repos\\\\PlaylistConverter\\\\PlaylistConverter\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction ConverterComponent_div_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const song_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", song_r4.title, \" - \", song_r4.artists[0], \" \");\n  }\n}\n\nfunction ConverterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"We found these Spotify songs:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ConverterComponent_div_9_div_3_Template, 2, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.playlist.songs);\n  }\n}\n\nfunction ConverterComponent_div_10_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const song_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", song_r6.attributes.name, \" - \", song_r6.attributes.artistName, \" \");\n  }\n}\n\nfunction ConverterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"We found these Apple Music songs:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ConverterComponent_div_10_div_3_Template, 2, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.appleSongs);\n  }\n}\n\nfunction ConverterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"h2\");\n    i0.ɵɵtext(2, \"Playlist Created Successfully!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ConverterComponent = /*#__PURE__*/(() => {\n  class ConverterComponent {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.linkControl = new FormControl('');\n      this.default = \"https://open.spotify.com/playlist/5aJjvZYiPfszshEDxBcgpZ?si=23064bf926b149ab\";\n      this.token = '';\n      this.appleSongs = [];\n      this.creationSuccesful = false;\n      this.getAppleDevToken();\n    }\n\n    ConfigureMusicKit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        console.log(\"made it!\");\n        let error = false;\n        console.log(_this.token);\n\n        try {\n          yield MusicKit.configure({\n            developerToken: _this.token,\n            app: {\n              name: 'PlaylistConverter',\n              build: '1978.4.1'\n            }\n          });\n        } catch (err) {\n          error = true;\n          console.log(\"got an error\"); // Handle configuration error\n        }\n\n        if (!error) {\n          // MusicKit instance is available\n          _this.music = MusicKit.getInstance();\n\n          _this.testApple();\n        }\n      })();\n    }\n\n    testApple() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        const headers = {\n          'Authorization': 'Bearer ' + _this2.token\n        };\n        let something = yield _this2.http.get('https://api.music.apple.com/v1/test', {\n          headers\n        }).toPromise();\n        console.log(something);\n      })();\n    }\n\n    searchSong() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        const headers = {\n          'Authorization': 'Bearer ' + _this3.token\n        };\n\n        for (const song of _this3.playlist.songs) {\n          try {\n            let result = yield _this3.http.get('https://api.music.apple.com/v1/catalog/us/search?types=songs,albums,artists&limit=1' + '&term=' + song.title + '+' + song.artists[0], {\n              headers\n            }).toPromise();\n            if (result.results.songs != undefined) _this3.appleSongs.push(result.results.songs.data[0]);\n            console.log(result);\n          } catch (ex) {}\n        }\n      })();\n    }\n\n    getAppleDevToken() {\n      this.http.get(this.baseUrl + 'playlist').subscribe(result => {\n        this.token = result;\n        this.ConfigureMusicKit();\n      }, error => console.error(error));\n    }\n\n    CreatePlaylist() {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        const headers = {\n          'Authorization': 'Bearer ' + _this4.token,\n          'Music-User-Token': _this4.music.api.userToken\n        };\n        let result = yield _this4.http.get('https://api.music.apple.com/v1/me/library/playlist-folders?filter[identity]=playlistsroot', {\n          headers\n        }).toPromise();\n        console.log(result);\n        const data = [];\n\n        for (const song of _this4.appleSongs) {\n          let temp = {\n            id: song.id,\n            type: 'songs'\n          };\n          data.push(temp);\n        }\n\n        const tracks = {\n          data: data\n        };\n        const parentData = [{\n          id: result.meta.filters.identity.playlistsroot[0].id,\n          type: 'library-playlist-folders'\n        }];\n        const parent = {\n          data: parentData\n        };\n        const attributes = {\n          description: _this4.playlist.description,\n          name: _this4.playlist.name\n        };\n        const relationships = {\n          tracks: tracks,\n          parent\n        };\n        const dataToSend = {\n          attributes: attributes,\n          relationships: relationships\n        };\n        let playlist = yield _this4.http.post('https://api.music.apple.com/v1/me/library/playlists', JSON.stringify(dataToSend), {\n          headers\n        }).toPromise();\n        console.log(playlist);\n        _this4.creationSuccesful = true;\n      })();\n    }\n\n    onSubmit() {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        _this5.appleSongs = []; //this.playlist.songs = [];\n\n        let linkValue = _this5.linkControl.value;\n        const regex = '[0-9A-Za-z]+\\\\?';\n        let found = linkValue.match(regex);\n        let playlistId = found[0].slice(0, -1);\n        let data = {\n          Id: playlistId\n        };\n        const headers = {\n          'content-type': 'application/json'\n        };\n        _this5.playlist = yield _this5.http.post(_this5.baseUrl + 'playlist', JSON.stringify(data), {\n          headers\n        }).toPromise();\n        console.log(_this5.playlist);\n        yield _this5.searchSong();\n        yield _this5.music.authorize();\n\n        _this5.CreatePlaylist();\n      })();\n    }\n\n  }\n\n  ConverterComponent.ɵfac = function ConverterComponent_Factory(t) {\n    return new (t || ConverterComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n  };\n\n  ConverterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConverterComponent,\n    selectors: [[\"app-converter\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[1, \"align-items-center\", \"pt-5\", \"text-light\"], [1, \"text-center\"], [1, \"container\", \"text-center\", \"pt-5\"], [1, \"pr-5\", \"row\"], [1, \"col\"], [\"type\", \"text\", 1, \"playlist-link\", \"me-3\", \"form-control-lg\", 3, \"ngModel\", \"formControl\", \"ngModelChange\"], [1, \"btn-lg\", \"btn-primary\", 3, \"click\"], [\"class\", \"pt-5\", 4, \"ngIf\"], [1, \"pt-5\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ConverterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"All we need is the link to your playlist...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ConverterComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.default = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ConverterComponent_Template_button_click_7_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(8, \"Go!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, ConverterComponent_div_9_Template, 4, 1, \"div\", 7);\n        i0.ɵɵtemplate(10, ConverterComponent_div_10_Template, 4, 1, \"div\", 7);\n        i0.ɵɵtemplate(11, ConverterComponent_div_11_Template, 3, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.default)(\"formControl\", ctx.linkControl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.playlist.songs.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.appleSongs.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.creationSuccesful);\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.NgIf, i3.NgForOf],\n    styles: [\".playlist-link[_ngcontent-%COMP%]{width:50%}\"]\n  });\n  return ConverterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}